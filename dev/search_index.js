var documenterSearchIndex = {"docs":
[{"location":"struct/#Structures-1","page":"Structures","title":"Structures","text":"","category":"section"},{"location":"struct/#ReplicateBE.ContrastTable-1","page":"Structures","title":"ReplicateBE.ContrastTable","text":"","category":"section"},{"location":"struct/#","page":"Structures","title":"Structures","text":"ReplicateBE.ContrastTable","category":"page"},{"location":"struct/#ReplicateBE.ContrastTable","page":"Structures","title":"ReplicateBE.ContrastTable","text":"struct ContrastTable <: RBETable\n    name::Vector   # Name\n    f::Vector      # F value\n    ndf::Vector    # Denom degree of freedom\n    df::Vector     # Degree of freedom\n    p::Vector      # p value\nend\n\n\n\n\n\n","category":"type"},{"location":"struct/#ReplicateBE.Design-1","page":"Structures","title":"ReplicateBE.Design","text":"","category":"section"},{"location":"struct/#","page":"Structures","title":"Structures","text":"ReplicateBE.Design","category":"page"},{"location":"struct/#ReplicateBE.Design","page":"Structures","title":"ReplicateBE.Design","text":"Describes of trial design.\n\n\n\n\n\n","category":"type"},{"location":"struct/#ReplicateBE.EffectTable-1","page":"Structures","title":"ReplicateBE.EffectTable","text":"","category":"section"},{"location":"struct/#","page":"Structures","title":"Structures","text":"ReplicateBE.EffectTable","category":"page"},{"location":"struct/#ReplicateBE.EffectTable","page":"Structures","title":"ReplicateBE.EffectTable","text":"struct EffectTable <: RBETable\n    name::Tuple{Vararg}   # Name\n    est::Tuple{Vararg}    # Estimate\n    se::Tuple{Vararg}     # Etandard error\n    f::Tuple{Vararg}      # F value\n    df::Tuple{Vararg}     # Degree of freedom\n    t::Tuple{Vararg}      # t value\n    p::Tuple{Vararg}      # p value\nend\n\n\n\n\n\n","category":"type"},{"location":"struct/#ReplicateBE.EstimateTable-1","page":"Structures","title":"ReplicateBE.EstimateTable","text":"","category":"section"},{"location":"struct/#","page":"Structures","title":"Structures","text":"ReplicateBE.EstimateTable","category":"page"},{"location":"struct/#ReplicateBE.EstimateTable","page":"Structures","title":"ReplicateBE.EstimateTable","text":"struct EstimateTable <: RBETable\n    name::Vector   # Name\n    est::Vector    # Estimate\n    se::Vector     # Etandard error\n    df::Vector     # Degree of freedom\n    t::Vector      # t value\n    p::Vector      # p value\n    ll::Vector     # Confidece interval lower bound\n    ul::Vector     # Confidece interval upper bound\n    alpha::Real    # Confidece interval alpha level\nend\n\n\n\n\n\n","category":"type"},{"location":"struct/#ReplicateBE.RandRBEDS-1","page":"Structures","title":"ReplicateBE.RandRBEDS","text":"","category":"section"},{"location":"struct/#","page":"Structures","title":"Structures","text":"ReplicateBE.RandRBEDS","category":"page"},{"location":"struct/#ReplicateBE.RandRBEDS","page":"Structures","title":"ReplicateBE.RandRBEDS","text":"Random dataset task.\n\nmutable struct RandRBEDS\n    n::Int                       # Subjects number\n    sequence::Vector             # Sequence distribution vector\n    design::Matrix               # Design matrix\n    inter::Vector                # Intersubject variance part\n    intra::Vector                # Intrasubject variance part\n                                 # Fixed effect:\n    intercept::Real              # Intercept\n    seqcoef::Vector              # Sequence\n    periodcoef::Vector           # Period\n    formcoef::Vector             # Formulation\n    dropobs::Int                 # Drop observations\n    seed                         # Seed\nend\n\n\n\n\n\n","category":"type"},{"location":"api/#API-1","page":"Api","title":"API","text":"","category":"section"},{"location":"api/#ReplicateBE.RBE-1","page":"Api","title":"ReplicateBE.RBE","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.RBE","category":"page"},{"location":"api/#ReplicateBE.RBE","page":"Api","title":"ReplicateBE.RBE","text":"    struct RBE\n        model::ModelFrame               #Model frame\n        rmodel::ModelFrame              #Random effect model\n        design::Design                  #Design description\n        factors::Array{Symbol, 1}       #Factor list\n        θ0::Array{Float64, 1}           #Initial variance paramethers\n        vlm::Real\n        θ::Tuple{Vararg{Float64}}       #Final variance paramethers\n        reml::Float64                   #-2REML\n        fixed::EffectTable              #Fixed Effect table\n        typeiii::ContrastTable          #Type III table\n        R::Array{Matrix{Float64},1}     #R matrices for each subject\n        V::Array{Matrix{Float64},1}     #V matrices for each subject\n        G::Matrix{Float64}              #G matrix\n        C::Matrix{Float64}              #C var(β) p×p variance-covariance matrix\n        A::Matrix{Float64}              #asymptotic variance-covariance matrix of b θ\n        H::Matrix{Float64}              #Hessian matrix\n        X::Matrix                       #Matrix for fixed effects\n        Z::Matrix                       #Matrix for random effects\n        Xv::Array{Matrix{Float64},1}    #X matrices for each subject\n        Zv::Array{Matrix{Float64},1}    #Z matrices for each subject\n        yv::Array{Array{Float64, 1},1}  #responce vectors for each subject\n        detH::Float64                   #Hessian determinant\n        preoptim::Union{Optim.MultivariateOptimizationResults, Nothing}         #Pre-optimization result object\n        optim::Optim.MultivariateOptimizationResults                            #Optimization result object\n    end\n\nReplicate bioequivalence structure.\n\n\n\n\n\n","category":"type"},{"location":"api/#ReplicateBE.rbe-1","page":"Api","title":"ReplicateBE.rbe","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.rbe","category":"page"},{"location":"api/#ReplicateBE.rbe","page":"Api","title":"ReplicateBE.rbe","text":"rbe(df; dvar::Symbol,\n    subject::Symbol,\n    formulation::Symbol,\n    period::Symbol,\n    sequence::Symbol,\n    g_tol::Float64 = 1e-8, x_tol::Float64 = 0.0, f_tol::Float64 = 0.0, iterations::Int = 100,\n    store_trace = false, extended_trace = false, show_trace = false,\n    memopt = true)\n\nMixed model fitting function for replicate bioequivalence without data preparation (apply categorical! for each factor and sort! to dataframe).\n\nMixed model in matrix form:\n\ny = Xbeta + Zu + epsilon\n\nwith covariance matrix for each subject:\n\nV_i = Z_iGZ_i+R_i\n\n\n\n\n\n","category":"function"},{"location":"api/#ReplicateBE.rbe-2","page":"Api","title":"ReplicateBE.rbe","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.rbe!","category":"page"},{"location":"api/#ReplicateBE.rbe!","page":"Api","title":"ReplicateBE.rbe!","text":"This function apply following code for each factor before executing:\n\n    categorical!(df, subject);\n    categorical!(df, formulation);\n    categorical!(df, period);\n    categorical!(df, sequence);\n    sort!(df, [subject, formulation, period])\n\nIt can takes more time, but can help to avoid some errors like: \"ERROR: type ContinuousTerm has no field contrasts\".\n\n\n\n\n\n","category":"function"},{"location":"api/#StatsBase.coef-1","page":"Api","title":"StatsBase.coef","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"coef","category":"page"},{"location":"api/#StatsBase.coef","page":"Api","title":"StatsBase.coef","text":"coef(rbe::RBE)\n\nReturn model coefficients.\n\nbeta = (sum_i=1^n X_iV_i^-1X_i)^-1(sum_i=1^n X_iV_i^-1y_i)\n\n\n\n\n\n","category":"function"},{"location":"api/#StatsBase.confint-1","page":"Api","title":"StatsBase.confint","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"confint","category":"page"},{"location":"api/#StatsBase.confint","page":"Api","title":"StatsBase.confint","text":"confint(obj::RBE; level::Real=0.95, expci::Bool = false, inv::Bool = false, df = :sat)\n\nCompute confidence intervals for coefficients, with confidence level level (by default 95%).\n\nArguments\n\nexpci = true: return exponented CI.\ninv = true: return -estimate ± t(alpha, df)*SE\ndf = :sat: use Satterthwaite DF approximation.\ndf = :df3 or df = :cont: DF (contain) = N - rank(ZX).\n\nCI = estimate  t(alpha df)*SE\n\n\n\n\n\n","category":"function"},{"location":"api/#StatsBase.dof-1","page":"Api","title":"StatsBase.dof","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"dof","category":"page"},{"location":"api/#StatsBase.dof","page":"Api","title":"StatsBase.dof","text":"dof(rbe::RBE)\n\nReturn the number of degrees of freedom for the coefficients of the model.\n\n\n\n\n\n","category":"function"},{"location":"api/#StatsBase.stderror-1","page":"Api","title":"StatsBase.stderror","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"stderror","category":"page"},{"location":"api/#StatsBase.stderror","page":"Api","title":"StatsBase.stderror","text":"StatsBase.stderror(rbe::RBE)\n\nReturn the standard errors for the coefficients of the model.\n\nse = sqrtLCL\n\nwhere\n\nC = sum_i=1^n X_iV_i^-1X_i\n\n\n\n\n\n","category":"function"},{"location":"api/#ReplicateBE.coefnum-1","page":"Api","title":"ReplicateBE.coefnum","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.coefnum","category":"page"},{"location":"api/#ReplicateBE.coefnum","page":"Api","title":"ReplicateBE.coefnum","text":"coefnum(rbe::RBE)\n\nReturn number of coefficients (length β).\n\n\n\n\n\n","category":"function"},{"location":"api/#ReplicateBE.contrast-1","page":"Api","title":"ReplicateBE.contrast","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.contrast","category":"page"},{"location":"api/#ReplicateBE.contrast","page":"Api","title":"ReplicateBE.contrast","text":"contrast(rbe::RBE, L::Matrix; numdf = 1, name = \"Contrast\", memopt = true)::ContrastTable\n\nReturn contrast table for L matrix. Table include:\n\nF\nNumDF\nDF\nP|f|\n\nF = fracbetaL(LCL)^-1Lbetarank(LCL)\n\nwhere\n\nC = sum_i=1^n X_iV_i^-1X_i\n\nDF for one-dimetion case:\n\ndf = frac2(LCL)^2gAg\n\nwhere A = 2H\n\nwhere g = triangledown _theta(LC^-1L)\n\nDF for multi-dimention case see Schaalje et al 2002.\n\np value calculated with:\n\npval    = ccdf(FDist(numdf, df), F)\n\n\n\n\n\n","category":"function"},{"location":"api/#ReplicateBE.design-1","page":"Api","title":"ReplicateBE.design","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.design","category":"page"},{"location":"api/#ReplicateBE.design","page":"Api","title":"ReplicateBE.design","text":"design(rbe::RBE)::Design\n\nReturn design information object.\n\n\n\n\n\n","category":"function"},{"location":"api/#ReplicateBE.estimate-1","page":"Api","title":"ReplicateBE.estimate","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.estimate","category":"page"},{"location":"api/#ReplicateBE.estimate","page":"Api","title":"ReplicateBE.estimate","text":"estimate(rbe::RBE, L::Matrix; df = :sat, name = \"Estimate\", memopt = true, alpha = 0.05)\n\nReturn estimate table for L 1xp matrix. Table include:\n\nestimate value\nSE\nDF\nt\nP|t|\nCI Upper\nCI Lower\n\nestimate = Lbeta\n\nSE = sqrtLCL\n\nt = estimate  SE\n\nFor df = :sat:\n\ndf = frac2(LCL)^2gAg\n\nwhere\n\nC = sum_i=1^n X_iV_i^-1X_i\n\nwhere A = 2H\n\nwhere g = triangledown _theta(LC^-1L)\n\nFor df = :cont (contain):\n\ndf = N - rank(ZX)\n\nCI estimate is:\n\nCI = estimate  t(alpha df)*SE\n\nExample of L matrix if length of fixed effect vector is 6, estimate for 4-th value:\n\nL = [0 0 0 1 0 0]\n\n\n\n\n\n","category":"function"},{"location":"api/#ReplicateBE.fixed-1","page":"Api","title":"ReplicateBE.fixed","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.fixed","category":"page"},{"location":"api/#ReplicateBE.fixed","page":"Api","title":"ReplicateBE.fixed","text":"fixed(rbe::RBE)\n\nReturn fixed effect table (β).\n\n\n\n\n\n","category":"function"},{"location":"api/#ReplicateBE.optstat-1","page":"Api","title":"ReplicateBE.optstat","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.optstat","category":"page"},{"location":"api/#ReplicateBE.optstat","page":"Api","title":"ReplicateBE.optstat","text":"optstat(rbe::RBE)\n\nReturn optimization status.\n\ntrue - converged\nfalse - not converged\n\n\n\n\n\n","category":"function"},{"location":"api/#ReplicateBE.randrbeds-1","page":"Api","title":"ReplicateBE.randrbeds","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.randrbeds","category":"page"},{"location":"api/#ReplicateBE.randrbeds","page":"Api","title":"ReplicateBE.randrbeds","text":"    randrbeds(;n=24, sequence=[1,1],\n        design = [\"T\" \"R\" \"T\" \"R\"; \"R\" \"T\" \"R\" \"T\"],\n        inter=[0.5, 0.4, 0.9], intra=[0.1, 0.2],\n        intercept = 0, seqcoef = [0.0, 0.0], periodcoef = [0.0, 0.0, 0.0, 0.0], formcoef = [0.0, 0.0],\n        dropsubj = 0.0, dropobs::Int = 0, seed::Int = 0)\n\nRandom dataset generation for bioequivalence.\n\nParameters\n\nn: number of subjects\nsequence: distribution in sequences [1,1] means 1:1, [1,3] - 1:4 etc.\ndesign: desin matrix, each line is a sequence, each column - periods, cell - formulation id\ninter: inter-subject variance vector for G matrix (length 3)\nintra: intra-subject variance vector for R matrix (length 2)\nintercept: intercept effect value\nseqcoef: coefficients of sequences (length(sequence) == length(seqcoef) == size(design, 1))\nperiodcoef: coefficients of periods (length(periodcoef) == size(design, 2))\nformcoef: coeficients of formulations\ndropobs: number of randomly dropped subjects\nseed: seed for random\n\nMultivariate normal disribution:\n\nf(mathbfx boldsymbolmu boldsymbolV) = frac1(2 pi)^d2 boldsymbolV^12\nexp left( - frac12 (mathbfx - boldsymbolmu)^T V^-1 (mathbfx - boldsymbolmu) right)\n\nWhere V:\n\nV_i = Z_iGZ_i+R_i\n\n\n\n\n\nAnother way to use:\n\n    randrbeds(n::Int, sequence::Vector,\n        design::Matrix,\n        θinter::Vector, θintra::Vector,\n        intercept::Real, seqcoef::Vector, periodcoef::Vector, formcoef::Vector,\n        dropsubj::Float64, dropobs::Int, seed::Int)\n\n\n\n\n\nUsing with RandRBEDS object:\n\nrandrbeds(task::RandRBEDS)\n\n\n\n\n\n","category":"function"},{"location":"api/#ReplicateBE.reml2-1","page":"Api","title":"ReplicateBE.reml2","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.reml2","category":"page"},{"location":"api/#ReplicateBE.reml2","page":"Api","title":"ReplicateBE.reml2","text":"reml2(rbe::RBE, θ::Array{Float64, 1})\n\nReturm -2logREML for rbe model with θ variance vector.\n\n\n\n\n\nreml2(rbe::RBE)\n\nReturm -2logREML for rbe model\n\nlogREML(thetabeta) = -fracN-p2 - frac12sum_i=1^nlogV_i-\n\n\n-frac12logsum_i=1^nX_iV_i^-1X_i-frac12sum_i=1^n(y_i - X_ibeta)V_i^-1(y_i - X_ibeta)\n\n\n\n\n\n","category":"function"},{"location":"api/#ReplicateBE.simulation-1","page":"Api","title":"ReplicateBE.simulation","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.simulation","category":"page"},{"location":"api/#ReplicateBE.simulation","page":"Api","title":"ReplicateBE.simulation","text":"Simulation.\n\nsimulation(task::RandRBEDS; io = stdout, verbose = false, num = 100, l = log(0.8), u = log(1.25), seed = 0)\n\n\n\n\n\n","category":"function"},{"location":"api/#ReplicateBE.theta-1","page":"Api","title":"ReplicateBE.theta","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.theta","category":"page"},{"location":"api/#ReplicateBE.theta","page":"Api","title":"ReplicateBE.theta","text":"theta(rbe::RBE)\n\nReturn raw theta (θ) vector (vector of variation parameters from optimization procedure). Before aplying link function.\n\n\n\n\n\n","category":"function"},{"location":"api/#ReplicateBE.typeiii-1","page":"Api","title":"ReplicateBE.typeiii","text":"","category":"section"},{"location":"api/#","page":"Api","title":"Api","text":"ReplicateBE.typeiii","category":"page"},{"location":"api/#ReplicateBE.typeiii","page":"Api","title":"ReplicateBE.typeiii","text":"typeiii(rbe::RBE)\n\nReturn TYPE III table.\n\n(see contrast)\n\n\n\n\n\n","category":"function"},{"location":"details/#Details-1","page":"Details","title":"Details","text":"","category":"section"},{"location":"details/#","page":"Details","title":"Details","text":"(Image: doi)","category":"page"},{"location":"details/#Introduction-1","page":"Details","title":"Introduction","text":"","category":"section"},{"location":"details/#","page":"Details","title":"Details","text":"The replicate designed bioequivalence is a powerful approach to get more information about variation. In some cases the number of subjects required to demonstrate bioequivalence can be reduced by up to about 50% (Van Peer, A., 2010). For a high variability product, replication can really improve the precision and provide more complete intra-individual variation estimate. Also replicate design could be used for reference-scaled average bioequivalence (RSABE) to demonstrate bioequivalence for highly variable drugs (HVDs). With accordance to US FDA guideline linear mixed-effects model procedures, available in PROC MIXED in SAS or equivalent software, should be used for the analysis of replicated crossover studies for average BE (US FDA). At this moment linear mixed model effect analysis can be done with proprietary (SPSS, SAS, Stata) and open source (R:nlme, R:lme4, Julia:MixedModels) software. But not all statistical mixed models packages support flexible covariance structure fitting with structures like “heterogeneous compound symmetry” (CSH), FA0(2). This doesn’t means that lme4 or MixedModels can’t be used for bioequivalence estimation,  but CSH structure not available in this packages and comparison of results performed in SAS/SPSS with lme4 can be problematically. Objective of this work is: to provide instrument to make bioequivalence analysis with type C model and a development of a demonstrative code for step-by-step clarification of mixed model computation procedure for any interested developers.","category":"page"},{"location":"details/#Materials-and-Methods-1","page":"Details","title":"Materials and Methods","text":"","category":"section"},{"location":"details/#","page":"Details","title":"Details","text":"FDA recommended model can be described with following equation (Patterson, 2002; US FDA):","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":" Y_ijkl = mu_k + gamma_ikl + delta_ijk + varepsilon_ijkl","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"Where  i=1s indicates sequence, j=1n_i - subjects,  k=RT – treatment, l=12 indicates replicate on treatment k for subjects within sequence i. Y_ijkl is the response of replicate l on treatment k for subject j in sequence i, γ_ikl represents the fixed effect of replicate l on treatment k in sequence i, δ_ijk is the random subject effect for subject j  in sequence i on treatment k, and ε_ijkl is the random error for subject j within sequence i on replicate l of treatment k.  The ε_ijkl are assumed to be mutually independent and identically distributed as","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"varepsilon_ijkl sim N(0 sigma_Wk^2)","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"And the random subject effects are assumed to be mutually independent and distributed as","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"delta_ij sim N_2\nbeginbmatrix\n    beginpmatrix  mu_R   mu_T end\n    pmatrixbeginpmatrixsigma_BR^2   rhosigma_BTsigma_BR \n    rhosigma_BTsigma_BR  sigma_BR^2\n    endpmatrix\nendbmatrix","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"Following code illustrates an example of program statements to run the average bioequivalence analysis using PROC MIXED in SAS:","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"PROC MIXED;\nCLASSES SEQ SUBJ PER TRT;\nMODEL  Y = SEQ PER TRT/ DDFM=SATTERTH;\nRANDOM  TRT/TYPE=FA0(2) SUB=SUBJ G;\nREPEATED/GRP=TRT SUB=SUBJ;\nESTIMATE 'T vs. R' TRT 1 -1/CL ALPHA=0.1;","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"Statement TYPE=CSH also can be used to match the model described above.","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"In matrix notation a mixed effect model can be represented as:","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"y = Xbeta + Zu + epsilon","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"And gives Henderson's «mixed model equations»:","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"beginpmatrixXR^-1XXR^-1ZZR^-1XZR^-1Z+G_-1endpmatrix  beginpmatrixwidehatbeta  widehatu endpmatrix= beginpmatrixXR^-1yZR^-1yendpmatrix","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"The solution to the mixed model equations is a maximum likelihood estimate when the distribution of the errors is normal. PROC MIXED in SAS used restricted maximum likelihood (REML) approach by default. REML equation can be described with following (Henderson,  1959;Laird et.al. 1982; Jennrich 1986; Lindstrom & Bates, 1988; Gurka et.al 2006):","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"logREML(thetabeta) = -fracN-p2 - frac12sum_i=1^nlogV_i-\n\n-frac12logsum_i=1^nX_iV_i^-1X_i-frac12sum_i=1^n(y_i - X_ibeta)V_i^-1(y_i - X_ibeta)","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"Where","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"beta = (sum_i=1^n X_iV_i^-1X_i)^-1(sum_i=1^n X_iV_i^-1y_i)","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"Where","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"V_i = Z_iGZ_i+R_i","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"Where N – total number of observations, n – number of independent sampling units (subjects), y_i individual response vector,  X_i individual design matrix of fixed effects, β vector of fixed effects parameters, V_i individual covariance matrix for the response vector, Z_i individual design matrix of random effects,  G covariance matrix of u (random effect), R_i individual covariance matrix  of  ϵ (residual error). Finding solution for minimization  -2logL(θ) respectively to θ can be done with Newton’s family methods. In ReplicateBE used optimization with Optim.jl package (Newton's Method). In some cases post-optimization step can be performed with  Broyden–Fletcher–Goldfarb–Shanno  method ((L)-BFGS)(Fletcher & Roger, 1987; Wright, 2006). Because variance have only positive values and ρ is limited as -1 ≤ ρ ≤1 in CSH (SAS implementation) and 0 ≤ ρ ≤1 in ReplicateBE \"link\" function is used. Exponential values is optimizing in variance part and ρ is linked with sigmoid function. All steps perform with differentiable functions with forward automatic differentiation using ForwardDiff package. ForwardDiff is a Julia package for forward-mode automatic differentiation (AD) featuring performance competitive with low-level languages like C++. Unlike recently developed AD tools in other popular high-level languages such as Python and MATLAB, ForwardDiff takes advantage of just-in-time (JIT) compilation to transparently recompile AD-unaware user code, enabling efficient support for higher-order differentiation and differentiation using custom number types (including complex numbers). The field of automatic differentiation provides methods for automatically computing exact derivatives (up to floating-point error) given only the function itself (Revels et al., 2016; Mogensen et al., 2018).","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"After solving optimization problem other statistical parameters can be found (Giesbrecht & Burns, 1985; Hrong-Tai Fai & Corneliu 1996; Schaalje et al 2002):","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"F = fracbetaL(LCL)^-1Lbetarank(LCL)","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"Where","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"C = sum_i=1^n X_iV_i^-1X_i","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"And","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"se = sqrtLCL","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"Degree of freedom (DF) computed with Satterthwaite approximation or with “contain” method (N – rank(XZ)).","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"df = frac2(LCL)^2gAg","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"Where  A = 2H^-1; g = triangledown_theta(LC^-1_thetaL)","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"Where L is a vector of known constant, C – variance-covariance matrix of fixed effects (var(β)), H – hessian matrix of REML function, N – total number of observations.","category":"page"},{"location":"details/#Validation-1","page":"Details","title":"Validation","text":"","category":"section"},{"location":"details/#","page":"Details","title":"Details","text":"ReplicateBE was validated with 6 reference public datasets, 24 generated datasets and simulation study. ReplicateBE version 0.1.4 and 0.2.0 is compliant to SAS/SPSS, values checked: REML estimate, variance components estimate, fixed effect estimate, standard error of fixed effect estimate. Validation procedures included in package test procedure and perform each time when new version released or can be done at any time on user machine. Confidence interval (95%) for type I error (alpha) is 0.048047 - 0.050733 (10000 iterations). No statistically significant difference found with acceptable rate (0.05) found (version 0.1.4). Testing procedures cover approximately (Image: codecov) of code, and perform for each release on Travis CI platform: (Image: Build Status).","category":"page"},{"location":"details/#Installation-and-using-1","page":"Details","title":"Installation and using","text":"","category":"section"},{"location":"details/#","page":"Details","title":"Details","text":"Installation:","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"using Pkg; Pkg.add(\"ReplicateBE\")","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"Basic using:","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"using ReplicateBE, StatsBase\nbe = ReplicateBE.rbe!(df, dvar = :var, subject = :subject, formulation = :formulation, period = :period, sequence = :sequence);\nci = confint(be, 0.1)","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"Standard output:","category":"page"},{"location":"details/#","page":"Details","title":"Details","text":"Bioequivalence Linear Mixed Effect Model (status: converged)\n\n-2REML: 329.257    REML: -164.629\n\nFixed effect:\n───────────────────────────────────────────────────────────────────────────────────────────\nEffect           Value         SE          F          DF        t           P|t|\n───────────────────────────────────────────────────────────────────────────────────────────\n(Intercept)      4.42158       0.119232    1375.21    68.9135   37.0838     2.90956e-47*\nsequence: 2      0.360591      0.161776    4.96821    63.0139   2.22895     0.0293917*\nperiod: 2        0.027051      0.0533388   0.257206   159.645   0.507155    0.612746\nperiod: 3        -0.00625777   0.0561037   0.012441   199.483   -0.111539   0.911301\nperiod: 4        0.036742      0.0561037   0.428886   199.483   0.654894    0.51329\nformulation: 2   0.0643404     0.0415345   2.39966    207.651   1.54908     0.122884\n───────────────────────────────────────────────────────────────────────────────────────────\nIntra-individual variation:\nformulation: 1   0.108629\nformulation: 2   0.0783544\nInter-individual variation:\nformulation: 1   0.377846\nformulation: 2   0.421356\nρ:               0.980288   Cov: 0.391143\nConfidence intervals(90%):\nformulation: 1 / formulation: 2\n99.5725 - 114.221 (%)\nformulation: 2 / formulation: 1\n87.5496 - 100.4293 (%)","category":"page"},{"location":"details/#Results-1","page":"Details","title":"Results","text":"","category":"section"},{"location":"details/#","page":"Details","title":"Details","text":"ReplicateBE was developed to get mixed model solution to bioequivalence clinical trial. Package repository: (Image: GitHub version), Julia 1.0.5 or latest should be installed.","category":"page"},{"location":"details/#Discussion-1","page":"Details","title":"Discussion","text":"","category":"section"},{"location":"details/#","page":"Details","title":"Details","text":"ReplicateBE not designed for modeling in a general purpose, but can be used in situation with similar structure. In part of datasets ReplicateBE showed better optimization result as SPSS. Also ReplicateBE based on direct inversing of variance-covarance matrix V, so computation of V^(-1) may be time expensive if size of matrix is big. This does not happen in bioequivalence study where size of V is no more 4 (4 periods). But in general this can be serious disadvantage. This situation can be avoided using sweep based transformations (Wolfinger et al., 1994). In ReplicateBE variance structure strictly denoted and can’t be changed, but it can be a target in package developing path. In ReplicateBE Satterthwaite degree of freedom (DF) not equal with SAS/SPSS DF estimate in part of datasets.","category":"page"},{"location":"details/#Acknowledgments-1","page":"Details","title":"Acknowledgments","text":"","category":"section"},{"location":"details/#","page":"Details","title":"Details","text":"D.Sc. in Physical and Mathematical Sciences Anastasia Shitova a.shitova@qayar.ru","category":"page"},{"location":"details/#Literature-Cited-1","page":"Details","title":"Literature Cited","text":"","category":"section"},{"location":"details/#","page":"Details","title":"Details","text":"FDA Guidance for Industry: Statistical Approaches to Establishing Bioequivalence, 2001\nFletcher, Roger (1987), Practical methods of optimization (2nd ed.), New York: John Wiley & Sons, ISBN 978-0-471-91547-8\nGiesbrecht, F. G., and Burns, J. C. (1985), \"Two-Stage Analysis Based on a Mixed Model: Large-sample Asymptotic Theory and Small-Sample Simulation Results,\" Biometrics, 41, 853-862.\nGurka, Matthew. (2006). Selecting the Best Linear Mixed Model under REML. The American Statistician. 60. 19-26. 10.1198/000313006X90396.\nHenderson, C. R., et al. “The Estimation of Environmental and Genetic Trends from Records Subject to Culling.” Biometrics, vol. 15, no. 2, 1959, pp. 192–218. JSTOR, www.jstor.org/stable/2527669.\nHrong-Tai Fai & Cornelius (1996) Approximate F-tests of multiple degree of freedom hypotheses in generalized least squares analyses of unbalanced split-plot experiments, Journal of Statistical Computation and Simulation, 54:4, 363-378, DOI: 10.1080/00949659608811740\nJennrich, R., & Schluchter, M. (1986). Unbalanced Repeated-Measures Models with Structured Covariance Matrices. Biometrics, 42(4), 805-820. doi:10.2307/2530695\nLaird, Nan M., and James H. Ware. “Random-Effects Models for Longitudinal Data.” Biometrics, vol. 38, no. 4, 1982, pp. 963–974. JSTOR, www.jstor.org/stable/2529876.\nLindstrom & J.; Bates, M. (1988). Newton—Raphson and EM Algorithms for Linear Mixed-Effects Models for Repeated-Measures Data. Journal of the American Statistical Association. 83. 1014. 10.1080/01621459.1988.10478693.\nMogensen et al., (2018). Optim: A mathematical optimization package for Julia. Journal of Open Source Software, 3(24), 615,doi: 10.21105/joss.00615\nPatterson, S. D. and Jones, B. (2002), Bioequivalence and the pharmaceutical industry. Pharmaceut. Statist., 1: 83-95. doi:10.1002/pst.15\nRevels, Jarrett & Lubin, Miles & Papamarkou, Theodore. (2016). Forward-Mode Automatic Differentiation in Julia.\nSchaalje GB, McBride JB, Fellingham GW. Adequacy of approximations to distributions of test statistics in complex mixed linear models. J Agric Biol Environ Stat. 2002;7:512–24.\nVan Peer, A. (2010), Variability and Impact on Design of Bioequivalence Studies. Basic & Clinical Pharmacology & Toxicology, 106: 146-153. doi:10.1111/j.1742-7843.2009.00485.x\nWolfinger et al., (1994) Computing gaussian likelihoods and their derivatives for general linear mixed models doi: 10.1137/0915079\nWright, Stephen, and Jorge Nocedal (2006) \"Numerical optimization.\" Springer","category":"page"},{"location":"testval/#Validation-1","page":"Validation","title":"Validation","text":"","category":"section"},{"location":"testval/#","page":"Validation","title":"Validation","text":"Validation program include public datasets and generated datasets. All public datasets include in test/testdata.jl.","category":"page"},{"location":"testval/#","page":"Validation","title":"Validation","text":"Generated datasets made with randrbeds function with fixed seed (could be reproduced at any time) and include following disignes:","category":"page"},{"location":"testval/#subjects,-balanced-1","page":"Validation","title":"24 subjects, balanced","text":"","category":"section"},{"location":"testval/#","page":"Validation","title":"Validation","text":"1  TRTR/RTRT\n2  TRRT/RTTR\n3  TTRR/RRTT\n4  TRTR/RTRT/TRRT/RTTR\n5  TRRT/RTTR/TTRR/RRTT\n6  TRTR/RTRT/TTRR/RRTT\n7  TRT/RTR\n8  TRR/RTT\n9  TR/RT/TT/RR\n10 TRR/RTR/RRT\n11 TRR/RTR*","category":"page"},{"location":"testval/#subjects,-unbalanced,-20-dropped-observations-1","page":"Validation","title":"48 subjects, unbalanced, 20 dropped observations","text":"","category":"section"},{"location":"testval/#","page":"Validation","title":"Validation","text":"12  TRTR/RTRT\n13  TRRT/RTTR\n14  TTRR/RRTT\n15  TRTR/RTRT/TRRT/RTTR\n16  TRRT/RTTR/TTRR/RRTT\n17  TRTR/RTRT/TTRR/RRTT\n18  TRT/RTR\n19  TRR/RTT\n20  TR/RT/TT/RR\n21 TRR/RTR/RRT\n22 TRR/RTR","category":"page"},{"location":"testval/#subject-unbalanced-dataset-1","page":"Validation","title":"36 subject unbalanced dataset","text":"","category":"section"},{"location":"testval/#","page":"Validation","title":"Validation","text":"23 TRTR/RTRT\n24 TRT/RTR","category":"page"},{"location":"testval/#Special-cases-1","page":"Validation","title":"Special cases","text":"","category":"section"},{"location":"testval/#","page":"Validation","title":"Validation","text":"* 101 SP1: TRTR/RTRT 1024 subjects, 2000 dropped observations\n* 102 SP2: TRT/RTR 4096 subjects, 2000 dropped observations (total 10288 observations)","category":"page"},{"location":"testval/#","page":"Validation","title":"Validation","text":"Datasets can be found here.","category":"page"},{"location":"testval/#","page":"Validation","title":"Validation","text":"SP1 output:","category":"page"},{"location":"testval/#","page":"Validation","title":"Validation","text":"rds = ReplicateBE.randrbeds(;n=1024, sequence=[1,2], design = [\"T\" \"R\" \"T\" \"R\"; \"R\" \"T\" \"R\" \"T\"], inter=[0.5, 0.4, 0.9], intra=[0.1, 0.2], intercept = 1.0, seqcoef = [0.0, 0.0], periodcoef = [0.0, 0.0, 0.0, 0.0], formcoef = [0.0, 0.1], dropobs = 2000, seed = 10101)\n@time be = ReplicateBE.rbe(rds, dvar = :var, subject = :subject, formulation = :formulation, period = :period, sequence = :sequence)\n  6.107196 seconds (14.51 M allocations: 981.933 MiB, 8.28% gc time)\nBioequivalence Linear Mixed Effect Model (status: converged)\n\n-2REML: 4032.92    REML: -2016.46\n\nFixed effect:\n─────────────────────────────────────────────────────────────────────────────────────────────\nEffect           Value         SE          F           DF        t           P|t|\n─────────────────────────────────────────────────────────────────────────────────────────────\n(Intercept)      1.17091       0.0342916   1165.94     1215.96   34.1458     9.58974e-180*\nsequence: TRTR   -0.0230415    0.0497151   0.214805    976.825   -0.463471   0.64313\nperiod: 2        -0.0118358    0.0300503   0.15513     1397.78   -0.393865   0.69374\nperiod: 3        -0.00522645   0.0288399   0.0328418   1139.11   -0.181223   0.856225\nperiod: 4        -0.0271755    0.0300382   0.81848     1398.08   -0.904699   0.365781\nformulation: T   -0.102651     0.0231198   19.7131     1445.78   -4.43995    9.68179e-6*\n─────────────────────────────────────────────────────────────────────────────────────────────\nIntra-individual variation:\nformulation: R   0.202459\nformulation: T   0.105328\n\nInter-individual variation:\nformulation: R   0.396337\nformulation: T   0.52727\nρ:               0.933991   Cov: 0.426964\n\nConfidence intervals(90%):\nformulation: R / formulation: T\n86.8747 - 93.7445 (%)\nformulation: T / formulation: R\n106.673 - 115.1083 (%)","category":"page"},{"location":"testval/#","page":"Validation","title":"Validation","text":"SP2 output:    ","category":"page"},{"location":"testval/#","page":"Validation","title":"Validation","text":"rds = ReplicateBE.randrbeds(;n=4096, sequence=[1,4], design = [\"T\" \"R\" \"T\"; \"R\" \"T\" \"R\"], inter=[0.5, 0.4, 0.9], intra=[0.1, 0.9], intercept = 1.0, seqcoef = [10.0, 0.0], periodcoef = [0.0, 0.0, 0.0], formcoef = [0.0, 1.0], dropobs = 2000, seed = 10102)\nbe = ReplicateBE.rbe(rds, dvar = :var, subject = :subject, formulation = :formulation, period = :period, sequence = :sequence)\n312.655087 seconds (269.38 M allocations: 14.273 GiB, 1.47% gc time)\nBioequivalence Linear Mixed Effect Model (status: converged)\n\n-2REML: 26633.2    REML: -13316.6\n\nFixed effect:\n───────────────────────────────────────────────────────────────────────────────────────\nEffect           Value         SE          F          DF        t           P|t|\n───────────────────────────────────────────────────────────────────────────────────────\n(Intercept)      1.99206       0.0184652   11638.4    4779.03   107.882     0.0*\nsequence: TRT    10.0134       0.0322104   96643.1    5028.62   310.875     0.0*\nperiod: 2        0.0193164     0.0223827   0.744777   6811.0    0.863005    0.388165\nperiod: 3        -0.00501682   0.0152331   0.108463   1577.27   -0.329338   0.741944\nformulation: T   -0.995365     0.0210042   2245.71    6298.6    -47.3889    0.0*\nIntra-individual variation:\nformulation: R   0.885914\nformulation: T   0.106905\n\nInter-individual variation:\nformulation: R   0.380248\nformulation: T   0.491359\nρ:               0.902941   Cov: 0.390294\n\nConfidence intervals(90%):\nformulation: R / formulation: T\n35.7036 - 38.2583 (%)\nformulation: T / formulation: R\n261.3815 - 280.0838 (%)","category":"page"},{"location":"testval/#","page":"Validation","title":"Validation","text":"SAS procedures for generated datasets can be found in validation/sas/ folder.","category":"page"},{"location":"testval/#","page":"Validation","title":"Validation","text":"All validation datasets (except special - SPX) include in package test procedure.","category":"page"},{"location":"testval/#","page":"Validation","title":"Validation","text":"SAS WARNING: Stopped because of infinite likelihood.","category":"page"},{"location":"testval/#Simulation-study-1","page":"Validation","title":"Simulation study","text":"","category":"section"},{"location":"testval/#","page":"Validation","title":"Validation","text":"Following simulation was performed for version v0.1.4:","category":"page"},{"location":"testval/#","page":"Validation","title":"Validation","text":"  using Distributions, ReplicateBE\n  function simulation(num)\n    n   = 0\n    err = 0\n    cnt = 0\n    b = l = log(0.8)\n    u = log(1.25)\n    println(\"Start...\")\n    for i = 1:num\n        try\n            rds   = ReplicateBE.randrbeds(;n=24, sequence=[1,1], design = [\"T\" \"R\" \"T\" \"R\"; \"R\" \"T\" \"R\" \"T\"], inter=[0.2, 0.2, 0.5], intra=[0.05, 0.05], intercept = 1.0, seqcoef = [0.0, 0.0], periodcoef = [0.0, 0.0, 0.0, 0.0], formcoef = [b, 0.0])\n            be    = ReplicateBE.rbe(rds, dvar = :var, subject = :subject, formulation = :formulation, period = :period, sequence = :sequence, memopt = false)\n            q     = quantile(TDist(be.fixed.df[6]), 0.95)\n            ll    = be.fixed.est[6] - q*be.fixed.se[6]\n            ul    = be.fixed.est[6] + q*be.fixed.se[6]\n            if ll > l && ul < u cnt += 1 end\n            if n > 1000\n                println(\"Iteration: $i\")\n                println(\"Mem: $(Sys.free_memory()/2^20)\")\n                println(\"Pow: $(cnt/i)\")\n                println(\"-------------------------------\")\n                n = 0\n            end\n            n += 1\n        catch\n            err += 1\n            println(\"Error $(err)!\")\n        end\n    end\n    return cnt/num\nend\n\nsimulation(100000)","category":"page"},{"location":"testval/#","page":"Validation","title":"Validation","text":"Rusults:","category":"page"},{"location":"testval/#","page":"Validation","title":"Validation","text":" 7104.944474 seconds (9.51 G allocations: 2.230 TiB, 44.90% gc time)\n0.04939","category":"page"},{"location":"testval/#","page":"Validation","title":"Validation","text":"Confidence interval (95%) for power: 0.048047 - 0.050733. No statistically significant difference found.","category":"page"},{"location":"examples/#Examples-1","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#Bioequivalence-example-1","page":"Examples","title":"Bioequivalence example","text":"","category":"section"},{"location":"examples/#","page":"Examples","title":"Examples","text":"using CSV, DataFrames, ReplicateBE, StatsBase\n\n#Load Dataframe...\n\ndf=CSV.read(IOBuffer(\"\"\"subject,sequence,period,formulation,var\n1,1,1,1,1.0\n1,1,2,2,1.1\n1,1,3,1,1.2\n1,1,4,2,1.3\n2,1,1,1,2.0\n2,1,2,2,2.1\n2,1,3,1,2.4\n2,1,4,2,2.2\n3,2,1,2,1.3\n3,2,2,1,1.5\n3,2,3,2,1.6\n3,2,4,1,1.4\n4,2,1,2,1.5\n4,2,2,1,1.7\n4,2,3,2,1.3\n4,2,4,1,1.4\n5,2,1,2,1.5\n5,2,2,1,1.7\n5,2,3,2,1.2\n5,2,4,1,1.8\"\"\")) |> DataFrame\n\n#Execute BE\n\nbe = rbe!(df, dvar = :var, subject = :subject, formulation = :formulation, period = :period, sequence = :sequence)\n\n#Get fixed effect object\n\nfixed(be)\n\n#Get Type III object\n\nypeiii(be)\n\n#Get model coefficients\n\ncoef(be)\n\n#Get Standard Error for coefficients\n\nstderror(be)\n\n#Get confidence intervals for all coefficients\n\nconfint(be, 0.1, expci = false, inv = false)\n\n#Get -2 REML for model\n\nreml2(be)\n\n#Design information\n\ndesign(be)","category":"page"},{"location":"examples/#Random-dataset-generation-1","page":"Examples","title":"Random dataset generation","text":"","category":"section"},{"location":"examples/#","page":"Examples","title":"Examples","text":"using ReplicateBE\n\ntask = ReplicateBE.RandRBEDS(;n=24,\nsequence=[1,1], design = [\"T\" \"R\" \"T\" \"R\"; \"R\" \"T\" \"R\" \"T\"],\ninter=[0.05, 0.04, 0.6], intra=[0.02, 0.02],\nintercept = 1.0, seqcoef = [0.0, 0.0], periodcoef = [0.0, 0.0, 0.0, 0.0],\nformcoef = [0.0, log(0.8)], seed = 1234, dropobs = 10)\n\ndf = ReplicateBE.randrbeds(task)\n\n#or\n\ndf = ReplicateBE.randrbeds(;n=24,\nsequence=[1,1], design = [\"T\" \"R\" \"T\" \"R\"; \"R\" \"T\" \"R\" \"T\"],\ninter=[0.05, 0.04, 0.6], intra=[0.02, 0.02],\nintercept = 1.0, seqcoef = [0.0, 0.0], periodcoef = [0.0, 0.0, 0.0, 0.0],\nformcoef = [0.0, log(0.8)], seed = 1234, dropobs = 10)\n","category":"page"},{"location":"examples/#Simulation-1","page":"Examples","title":"Simulation","text":"","category":"section"},{"location":"examples/#","page":"Examples","title":"Examples","text":"\nusing ReplicateBE\n\ntask = ReplicateBE.RandRBEDS(;n=24,\nsequence=[1,1], design = [\"T\" \"R\" \"T\" \"R\"; \"R\" \"T\" \"R\" \"T\"],\ninter=[0.05, 0.04, 0.6], intra=[0.02, 0.02],\nintercept = 1.0, seqcoef = [0.0, 0.0], periodcoef = [0.0, 0.0, 0.0, 0.0],\nformcoef = [0.0, log(0.8)], seed = 0, dropobs = 10)\n\nresult =  ReplicateBE.simulation(task; num = 200, seed = 123)\n","category":"page"},{"location":"#ReplicateBE.jl-Documentation-1","page":"Home","title":"ReplicateBE.jl Documentation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"CurrentModule = ReplicateBE","category":"page"},{"location":"#","page":"Home","title":"Home","text":"ReplicateBE is a Julia package providing mixed model solution for replicate designed bioequivalence study. This can be used to obtained results with methods C (random effects with interaction), given by the EMA in Annex I. Statistical model formed with accordance FDA Guidance for Industry: Statistical Approaches to Establishing Bioequivalence, APPENDIX F.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\n        \"examples.md\",\n        \"syntax.md\",\n        \"details.md\",\n        \"testval.md\",\n        \"struct.md\",\n        \"api.md\"]\nDepth = 3","category":"page"},{"location":"syntax/#Syntax-1","page":"Syntax","title":"Syntax","text":"","category":"section"},{"location":"syntax/#Simple-syntax-1","page":"Syntax","title":"Simple syntax","text":"","category":"section"},{"location":"syntax/#","page":"Syntax","title":"Syntax","text":"Simple syntax can be used in general purpose. ","category":"page"},{"location":"syntax/#","page":"Syntax","title":"Syntax","text":"rbe!(df; dvar::Symbol, subject::Symbol, formulation::Symbol, period::Symbol, sequence::Symbol)","category":"page"},{"location":"syntax/#Full-syntax-1","page":"Syntax","title":"Full syntax","text":"","category":"section"},{"location":"syntax/#","page":"Syntax","title":"Syntax","text":"With keywords you can define additional options. ","category":"page"},{"location":"syntax/#","page":"Syntax","title":"Syntax","text":"rbe!(df; dvar::Symbol,\n    subject::Symbol,\n    formulation::Symbol,\n    period::Symbol,\n    sequence::Symbol,\n    g_tol::Float64 = 1e-8, x_tol::Float64 = 0.0, f_tol::Float64 = 0.0, iterations::Int = 100,\n    store_trace = false, extended_trace = false, show_trace = false,\n    memopt = true)","category":"page"},{"location":"syntax/#Arguments-and-keywords-1","page":"Syntax","title":"Arguments and keywords","text":"","category":"section"},{"location":"syntax/#","page":"Syntax","title":"Syntax","text":"df::DataFrame - DataFrame with data\ndvar::Symbol - variable\nsubject::Symbol - Subject column\nformulation::Symbol - Formulation clumn\nperiod::Symbol - Period column\nsequence::Symbol - Sequence column\ng_tol\nx_tol\nf_tol\niterations:: - Maximum iterations\nstore_trace\nextended_trace\nshow_trace\nmemopt::Bool - memory optimization, can increase performance  ","category":"page"},{"location":"syntax/#Not-modifying-syntax-1","page":"Syntax","title":"Not modifying syntax","text":"","category":"section"},{"location":"syntax/#","page":"Syntax","title":"Syntax","text":"If you use rbe!() function no data transformations done with dfsuch as categorical!() and sort!().","category":"page"},{"location":"syntax/#","page":"Syntax","title":"Syntax","text":"rbe!(df; dvar::Symbol, subject::Symbol, formulation::Symbol, period::Symbol, sequence::Symbol)","category":"page"}]
}
